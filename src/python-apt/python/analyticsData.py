
"""
Automatically generated by Colab.
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
import warnings

warnings.filterwarnings('ignore')

# Carregar a base de dados
df = pd.read_csv('/home/erick/Documentos/Projetos/Python/Analytics Data/content/StudentsPerformance.csv')

# Exibir as dimensões do dataset
print(f"Dimensões do conjunto de dados: {df.shape}")

# Exibir as primeiras e últimas linhas do dataset
print("\nPrimeiras linhas:")
print(df.head())
print("\nÚltimas linhas:")
print(df.tail())

# Traduzindo os nomes das colunas para português
df.columns = ["Genero", "Raca_Etnia", "Escolaridade_Pais", "Refeicao", "Curso_Preparatorio", "Nota_Matematica", "Nota_Leitura", "Nota_Escrita"]

# Verificação de valores únicos e duplicados
print("\nValores únicos em cada coluna:")
print(df.nunique())
print("\nQuantidade de valores duplicados:", df.duplicated().sum())

# Verificação de valores nulos
plt.figure(figsize=(12, 5))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("Visualização de Valores Nulos")
plt.show()

# Estatísticas descritivas
descricao = df.describe()
print("\nEstatísticas Descritivas:")
print(descricao)

# Distribuição de gênero
genero_contagem = df['Genero'].value_counts(normalize=True) * 100
print("\nDistribuição de Gênero:")
print(genero_contagem)
genero_contagem.plot.pie(autopct='%1.1f%%', labels=None, legend=True, title="Distribuição de Gênero")
plt.show()

# Distribuição de raça/etnia
raca_contagem = df['Raca_Etnia'].value_counts(normalize=True) * 100
print("\nDistribuição de Raça/Etnia:")
print(raca_contagem)
raca_contagem.plot.pie(autopct='%1.1f%%', labels=None, legend=True, title="Distribuição de Raça/Etnia")
plt.show()

# Histogramas das notas
plt.figure(figsize=(10, 6))
df[['Nota_Matematica', 'Nota_Leitura', 'Nota_Escrita']].hist(
    bins=20, figsize=(10, 6), alpha=0.7
)
plt.suptitle("Distribuição das Notas")
plt.show()

# Boxplot das notas separadas por gênero
plt.figure(figsize=(8, 6))
sns.boxplot(data=df, x='Genero', y='Nota_Matematica')
plt.title("Distribuição das Notas de Matemática por Gênero")
plt.show()

# Correlação entre notas de matemática e escrita
plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='Nota_Matematica', y='Nota_Escrita', hue='Genero')
plt.title("Correlação entre Notas de Matemática e Escrita")
plt.show()

# Correlação geral entre as notas
plt.figure(figsize=(8, 6))
sns.heatmap(df[['Nota_Matematica', 'Nota_Leitura', 'Nota_Escrita']].corr(), annot=True, cmap="coolwarm")
plt.title("Matriz de Correlação entre as Notas")
plt.show()

print("Análise concluída!")